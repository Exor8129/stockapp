generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model stock_data {
  sr_no                String      @default(dbgenerated("nextval('stock_data_sr_no_seq'::regclass)"))
  item                 String
  hsn_code             String?     @db.VarChar(50)
  purchase_qty         Int?
  sale_qty             Int?
  sale_return_qty      Int?
  stock_qty            Int?
  stock_adjustment     String?
  min_stock            Decimal?    @db.Decimal(10, 3)
  status               String?     @db.VarChar(50)
  vendor               String?     @db.VarChar(100)
  debit_note           String?
  rate                 Decimal?    @db.Decimal(10, 2)
  op_stock_amount      Decimal?    @db.Decimal(10, 2)
  flood                String?     @db.VarChar(50)
  status5              String?     @db.VarChar(50)
  tax_rate             Decimal?    @db.Decimal(5, 2)
  display_in_dashboard String?
  total_qty            String?
  total_amount         Decimal?    @db.Decimal(15, 2)
  value                Decimal?    @db.Decimal(15, 2)
  closing_stock        Decimal?    @db.Decimal(10, 3)
  closing_with_tax     Decimal?    @db.Decimal(15, 2)
  general_rate         Decimal?    @db.Decimal(10, 2)
  column1              String?
  column2              String?
  price_limit          Decimal?    @db.Decimal(15, 2)
  column3              String?
  column4              String?
  id                   Int         @id @default(autoincrement())
  batchdata            batchdata[]
  team    String?
}

model batchdata {
  id         Int        @id @default(autoincrement())
  item_id    Int
  lot        String?    @db.VarChar(100)
  expiry     DateTime?  @db.Date
  stock      Int?       @default(0)
  mrp        Decimal?   @db.Decimal(10, 2)
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  team       String     @default("team1") @db.VarChar(50)
  stock_data stock_data @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}





